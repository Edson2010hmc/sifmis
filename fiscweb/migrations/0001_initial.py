# Generated by Django 4.2.7 on 2025-10-17 13:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import fiscweb.models_ps


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FiscaisCad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chave', models.CharField(max_length=4, unique=True, verbose_name='Chave')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
                ('email', models.EmailField(max_length=40, verbose_name='E-mail')),
                ('celular', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Celular deve estar no formato: (99)99999-9999', regex='^\\(\\d{2}\\)\\d{4,5}-\\d{4}$')], verbose_name='Celular')),
                ('perfFisc', models.BooleanField(default=False, verbose_name='Perfil Fiscal?')),
                ('perfAdm', models.BooleanField(default=False, verbose_name='Perfil ADM?')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fiscal',
                'verbose_name_plural': 'Fiscais',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ModalBarco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modal', models.CharField(max_length=20, verbose_name='Modal')),
            ],
            options={
                'verbose_name': 'Modal',
                'verbose_name_plural': 'Modais',
            },
        ),
        migrations.CreateModel(
            name='PassServ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numPS', models.IntegerField(verbose_name='Numero da PS')),
                ('anoPS', models.CharField(max_length=5, verbose_name='Ano da PS')),
                ('dataInicio', models.DateField(verbose_name='Inicio da Quinzena')),
                ('dataFim', models.DateField(verbose_name='Fim da Quinzena')),
                ('dataEmissaoPS', models.DateField(default='2025-01-01', verbose_name='Data de Emissao')),
                ('TipoBarco', models.CharField(max_length=6, verbose_name='Barco')),
                ('BarcoPS', models.CharField(max_length=30, verbose_name='Barco')),
                ('statusPS', models.CharField(choices=[('RASCUNHO', 'RASCUNHO'), ('FINALIZADA', 'FINALIZADA')], default='RASCUNHO', max_length=12, verbose_name='Status da PS')),
                ('fiscalEmb', models.CharField(max_length=30, verbose_name='Fiscal Embarcando')),
                ('fiscalDes', models.CharField(max_length=30, verbose_name='Fiscal Desembarcando')),
                ('pdfPath', models.CharField(blank=True, max_length=500, null=True, verbose_name='Caminho do PDF')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Passagem de Serviço',
                'verbose_name_plural': 'Passagens de serviço',
                'ordering': ['BarcoPS', '-numPS'],
            },
        ),
        migrations.CreateModel(
            name='PortoEmbEquip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevEmbEquip', models.BooleanField(default=False, verbose_name='Embarque de Equipe?')),
                ('ObservEmbEquip', models.TextField(blank=True, max_length=200, verbose_name='Observações')),
                ('idxPortoEE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Embarque Equipe - Porto',
                'verbose_name_plural': 'Embarque Equipes - Portos',
                'ordering': ['idxPortoEE__BarcoPS', '-idxPortoEE__numPS'],
            },
        ),
        migrations.CreateModel(
            name='PortoEmbMat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevEmbMat', models.BooleanField(default=False, verbose_name='Embarque de Materiais?')),
                ('ObservEmbMat', models.TextField(blank=True, max_length=200, verbose_name='Observações')),
                ('idxPortoEM', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Embarque Material - Porto',
                'verbose_name_plural': 'Embarque Materiais - Portos',
                'ordering': ['idxPortoEM__BarcoPS', '-idxPortoEM__numPS'],
            },
        ),
        migrations.CreateModel(
            name='PortoInspNorm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevInsNorm', models.BooleanField(default=False, verbose_name='Inspeção Normativa?')),
                ('ObservInspNorm', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('idxPortoIN', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Inspeção Normativa - Porto',
                'verbose_name_plural': 'Inspeções Normativas - Portos',
                'ordering': ['idxPortoIN__BarcoPS', '-idxPortoIN__numPS'],
            },
        ),
        migrations.CreateModel(
            name='PortoInspPetr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevInspPetr', models.BooleanField(default=False, verbose_name='Inspeção Petrobras?')),
                ('ObservInspPetr', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('idxPortoIP', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Inspeção Petrobras - Porto',
                'verbose_name_plural': 'Inspeções Petrobras - Portos',
                'ordering': ['idxPortoIP__BarcoPS', '-idxPortoIP__numPS'],
            },
        ),
        migrations.CreateModel(
            name='PortoMobD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevMobD', models.BooleanField(default=False, verbose_name='Mobilização ou Desmobilização?')),
                ('ObservMobD', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('idxPortoMobD', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'MObilização e Desmobilização - Porto',
                'verbose_name_plural': 'Mobilizações Desmobilizações - Portos',
                'ordering': ['idxPortoMobD__BarcoPS', '-idxPortoMobD__numPS'],
            },
        ),
        migrations.CreateModel(
            name='SubTabPortoMobD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OsMobD', models.CharField(max_length=12, verbose_name='OS de Origem')),
                ('DescMobD', models.CharField(max_length=300, verbose_name='Descrição dada OS de Mobilização ou Desmobilização')),
                ('idxSubTabPortoMobD', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.portomobd')),
            ],
            options={
                'verbose_name': 'MObilização e Desmobilização - Porto',
                'verbose_name_plural': 'Mobilizações Desmobilizações - Portos',
                'ordering': ['idxSubTabPortoMobD'],
            },
        ),
        migrations.CreateModel(
            name='subTabPortoInspPetr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DescInspPetr', models.CharField(choices=[('GSOP/SMS', 'GSOP/SMS'), ('GERENCIA CONTRATO', 'GERENCIA CONTRATO'), ('STEE', 'STEE'), ('GERENTE MIS', 'GERENTE MIS'), ('STO MIS', 'STO MIS'), ('OUTROS', 'OUTROS')], max_length=20, verbose_name='Descrição da visita')),
                ('auditorPetr', models.CharField(max_length=30, verbose_name='Auditor/Visitante')),
                ('gerAuditorPetr', models.CharField(max_length=30, verbose_name='Gerencia')),
                ('idxsubTabPortoIP', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.portoinsppetr')),
            ],
            options={
                'verbose_name': 'Lista Inspeção Petrobras - Porto',
                'verbose_name_plural': 'Lista Inspeções Petrobras - Portos',
                'ordering': ['idxsubTabPortoIP__idxPortoIP__BarcoPS', '-idxsubTabPortoIP__idxPortoIP__numPS'],
            },
        ),
        migrations.CreateModel(
            name='subTabPortoInspNorm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DescInspNorm', models.CharField(choices=[('anvisa', 'ANVISA'), ('classe', 'CLASSE'), ('marinha', 'MARINHA'), ('outros', 'OUTROS')], max_length=10, verbose_name='Inspeções Normativas')),
                ('OrdSerInspNorm', models.CharField(max_length=12, verbose_name='Ordem de Serviço')),
                ('idxsubTabPortoInspNorm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.portoinspnorm')),
            ],
            options={
                'verbose_name': 'Lista Inspeção Normativa - Porto',
                'verbose_name_plural': 'Lista Inspeções Normativas - Portos',
                'ordering': ['idxsubTabPortoInspNorm__idxPortoIN__BarcoPS', '-idxsubTabPortoInspNorm__idxPortoIN__numPS'],
            },
        ),
        migrations.CreateModel(
            name='subTabPortoEmbMat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipoMatEmb', models.CharField(choices=[('MATERIAIS OP CRD', 'MATERIAIS OP CRD'), ('MATERIAIS OP MIS', 'MATERIAIS OP MIS'), ('CONTENTORES', 'CONTENTORES'), ('FERRAMENTAS', 'FERRAMENTAS'), ('MATERIAIS EQSE', 'MATERIAIS EQSE'), ('OUTROS', 'OUTROS')], max_length=30, verbose_name='Tipo de Material')),
                ('numSerMatEmb', models.CharField(max_length=30, verbose_name='Identificador ou Num Serie do Material')),
                ('matEmbDesc', models.CharField(max_length=300, verbose_name='Descrição do Material')),
                ('dataValCertLing', models.DateField(verbose_name='Data Validade Certificado Lingada-Olhais')),
                ('OsEmbMat', models.CharField(max_length=12, verbose_name='OS de Destino')),
                ('RtEmbMat', models.CharField(max_length=14, verbose_name='Num RT')),
                ('Anexos', models.FileField(upload_to=fiscweb.models_ps.caminho_PS, verbose_name='Anexo')),
                ('idxSubTabPortoEM', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.portoembmat')),
            ],
            options={
                'verbose_name': 'Lista Embarque Material - Porto',
                'verbose_name_plural': 'Lista Embarque Materiais - Portos',
                'ordering': ['idxSubTabPortoEM__idxPortoEM__BarcoPS', '-idxSubTabPortoEM__idxPortoEM__numPS'],
            },
        ),
        migrations.CreateModel(
            name='subTabPortoEmbEquip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DescEmbEquip', models.CharField(choices=[('CRD', 'CRD'), ('STC', 'STC'), ('EQSE', 'EQSE'), ('STO', 'STO'), ('CENPES', 'CENPES'), ('AMBIENTAÇÃO MIS', 'AMBIENTAÇÃO MIS'), ('OUTROS', 'OUTROS')], max_length=18, verbose_name='Descrição')),
                ('equipNome', models.CharField(max_length=30, verbose_name='Nome')),
                ('equipFuncao', models.CharField(max_length=30, verbose_name='Função')),
                ('equipEmpre', models.CharField(max_length=30, verbose_name='Empresa')),
                ('idxSubTabPortoEE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.portoembequip')),
            ],
            options={
                'verbose_name': 'Lista Embarque Equipe - Porto',
                'verbose_name_plural': 'Lista Embarque Equipes - Portos',
                'ordering': ['idxSubTabPortoEE__idxPortoEE', '-idxSubTabPortoEE__idxPortoEE__numPS'],
            },
        ),
        migrations.CreateModel(
            name='smsLvSeg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LvSegCamoAsogUlt', models.DateField(verbose_name='Data da Última LV CAMO/ASOG')),
                ('LvSegCamoAsogProx', models.DateField(verbose_name='Data da Próxima LV CAMO/ASOG')),
                ('LvlSegCamoAsogFarol', models.CharField(max_length=3, verbose_name='Farol LV CAMO/ASOG')),
                ('LvSegCondNavioCpUlt', models.DateField(verbose_name='Data da Última LV Condição Navio(Curto Prazo)')),
                ('LvSegCondNavioCpProx', models.DateField(verbose_name='Data da Próxima LV Condição Navio(Curto Prazo)')),
                ('LvSegCondNavioCpFarol', models.CharField(max_length=3, verbose_name='Farol LV Condição Navio(Curto Prazo)')),
                ('LvlSegCondNavioLpUlt', models.DateField(verbose_name='Data da Última LV Condição Navio(Longo Prazo)')),
                ('LvSegCondNavioLpProx', models.DateField(verbose_name='Data da Próxima LV Condição Navio(Longo Prazo)')),
                ('LvSegCondNavioLpFarol', models.CharField(max_length=3, verbose_name='Farol LV Condição Navio(Longo Prazo)')),
                ('LvSegEspConfUlt', models.DateField(verbose_name='Data da Última LV Espaço Confinado')),
                ('LvSegEspConfProx', models.DateField(verbose_name='Data da Próxima LV Espaço Confinado')),
                ('LvSegEspConfFarol', models.CharField(max_length=3, verbose_name='Farol LV Espaço Confinado')),
                ('LvSegMovCargasUlt', models.DateField(verbose_name='Data da Última LV Movimentação de Cargas')),
                ('LvSegMovCargasProx', models.DateField(verbose_name='Data da Próxima LV Movimentação de Cargas')),
                ('LvSegMovCargasFarol', models.CharField(max_length=3, verbose_name='Farol LV Movimentação de Cargas')),
                ('LvSegPintQuimPerUlt', models.DateField(verbose_name='Data da Última LV Pintura e Produtos Químicos Perigosos')),
                ('LvSegPintQuimPerProx', models.DateField(verbose_name='Data da Próxima LV Pintura e Produtos Químicos Perigosos')),
                ('LvSegPintQuimPerFarol', models.CharField(max_length=3, verbose_name='Farol LV Pintura e Produtos Químicos Perigosos')),
                ('LvSegProcVcpUlt', models.DateField(verbose_name='Data da Última LV de Processo de VCP')),
                ('LvSegProcVcpProx', models.DateField(verbose_name='Data da Próxima LV de Processo de VCP')),
                ('LvSegProcVcpFarol', models.CharField(max_length=3, verbose_name='Farol LV de Processo de VCP')),
                ('LvlSegRespEmergUlt', models.DateField(verbose_name='Data da Última LV de Resposta a Emergência')),
                ('LvSegRespEmergProx', models.DateField(verbose_name='Data da Próxima LV de Resposta a Emergência')),
                ('LvSegRespEmergFarol', models.CharField(max_length=3, verbose_name='Farol LV de Resposta a Emergência')),
                ('LvlSegRiscSanitUlt', models.DateField(verbose_name='Data da Última LV de Risco Sanitário')),
                ('LvSegRiscSanitProx', models.DateField(verbose_name='Data da Próxima LV de Risco Sanitário')),
                ('LvSegRiscSanitFarol', models.CharField(max_length=3, verbose_name='Farol LV de Risco Sanitário')),
                ('LvSegTestHidrostUlt', models.DateField(verbose_name='Data da Última LV de Teste Hidrostático')),
                ('LvSegTestHidrostProx', models.DateField(verbose_name='Data da Próxima LV de Teste Hidrostático')),
                ('LvSegTestHidrostFarol', models.CharField(max_length=3, verbose_name='Farol LV de Teste Hidrostático')),
                ('LvlSegTrabQuentUlt', models.DateField(verbose_name='Data da Última LV de Trabalho a Quente')),
                ('LvSegTrabQuentProx', models.DateField(verbose_name='Data da Próxima LV de Trabalho a Quente')),
                ('LvSegTrabQuentFarol', models.CharField(max_length=3, verbose_name='Farol LV de Trabalho a Quente')),
                ('LvlSegTrabAltUlt', models.DateField(verbose_name='Data da Última LV de Trabalho em Altura')),
                ('LvSegTrabAltProx', models.DateField(verbose_name='Data da Próxima LV de Trabalho em Altura')),
                ('LvSegTrabAltFarol', models.CharField(max_length=3, verbose_name='Farol LV de Trabalho em Altura')),
                ('LvlSegTrabEletrUlt', models.DateField(verbose_name='Data da Última LV de Trabalho em eletricidade')),
                ('LvSegTrabEletrProx', models.DateField(verbose_name='Data da Próxima LV de Trabalho em eletricidade')),
                ('LvSegTrabEletrFarol', models.CharField(max_length=3, verbose_name='Farol LV de Trabalho em eletricidade')),
                ('obsLvSeg', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('idxsmsLvSeg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'LV de Segurança',
                'verbose_name_plural': 'LVs de Segurança',
                'ordering': ['idxsmsLvSeg__BarcoPS', '-idxsmsLvSeg__numPS'],
            },
        ),
        migrations.CreateModel(
            name='smsLvMang',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataUltLvMang', models.DateField(verbose_name='Data da Última LV')),
                ('dataProxLvMang', models.DateField(verbose_name='Data da Próxima LV')),
                ('obsLvMang', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('idxsmsLvMang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'LV de Mangueiras',
                'verbose_name_plural': 'LVs de Mangueiras',
                'ordering': ['idxsmsLvMang__BarcoPS', '-idxsmsLvMang__numPS'],
            },
        ),
        migrations.CreateModel(
            name='PortoTrocaTurma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Porto', models.CharField(max_length=40, verbose_name='Porto')),
                ('Terminal', models.CharField(max_length=40, verbose_name='Terminal')),
                ('OrdSerPorto', models.CharField(max_length=12, verbose_name='Ordem de Serviço')),
                ('AtracPorto', models.TimeField(verbose_name='Horario da Atracação')),
                ('DuracPorto', models.CharField(max_length=6, verbose_name='Duração da estadia(h)')),
                ('ObservPorto', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('idxPortoTT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Troca de Turma - Porto',
                'verbose_name_plural': 'Trocas de Turma - Portos',
                'ordering': ['idxPortoTT__BarcoPS', '-idxPortoTT__numPS'],
            },
        ),
        migrations.CreateModel(
            name='PortoManutPrev',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevManPrev', models.BooleanField(default=False, verbose_name='Manutenção preventiva prevista?')),
                ('Franquia', models.IntegerField(verbose_name='Franquia solicitada')),
                ('SaldoFranquia', models.IntegerField(verbose_name='Saldo de Franquia')),
                ('OrdSerManutPrev', models.CharField(max_length=12, verbose_name='Ordem de Serviço')),
                ('Rade', models.FileField(blank=True, null=True, upload_to=fiscweb.models_ps.caminho_PS, verbose_name='Anexo Rade')),
                ('ObservManPrev', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('idxPortoMP', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Manutenção Preventiva - Porto',
                'verbose_name_plural': 'Manutenções Preventivas - Portos',
                'ordering': ['idxPortoMP__BarcoPS', '-idxPortoMP__numPS'],
            },
        ),
        migrations.CreateModel(
            name='PortoDesMat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevDesMat', models.BooleanField(default=False, verbose_name='Desembarque de Materiais?')),
                ('OsDesMat', models.CharField(max_length=12, verbose_name='OS de Origem')),
                ('RtDesMat', models.CharField(max_length=12, verbose_name='Num RT')),
                ('ObservDesMat', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('Anexos', models.FileField(upload_to=fiscweb.models_ps.caminho_PS, verbose_name='Anexo')),
                ('idxPortoDM', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Desembarque Material - Porto',
                'verbose_name_plural': 'Desembarque Materiais - Portos',
                'ordering': ['idxPortoDM__BarcoPS', '-idxPortoDM__numPS'],
            },
        ),
        migrations.CreateModel(
            name='PortoAbast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevAbast', models.BooleanField(default=False, verbose_name='Abastecimento previsto?')),
                ('OrdSerAbast', models.CharField(blank=True, max_length=12, verbose_name='Ordem de Serviço')),
                ('DataHoraPrevAbast', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora Prevista')),
                ('QuantAbast', models.IntegerField(blank=True, null=True, verbose_name='Quantidade (m³)')),
                ('DuracPrev', models.IntegerField(blank=True, null=True, verbose_name='Duração Prevista(h)')),
                ('UltAbast', models.DateField(blank=True, null=True, verbose_name='Último Abastecimento')),
                ('QuantUltAbast', models.IntegerField(blank=True, null=True, verbose_name='Quantidade Ultimo Abastecimento (m³)')),
                ('Anexos', models.FileField(blank=True, null=True, upload_to=fiscweb.models_ps.caminho_PS, verbose_name='Anexos')),
                ('ObservAbast', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('idxPortoAB', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Abastecimento - Porto',
                'verbose_name_plural': 'Abastecimentos - Portos',
                'ordering': ['idxPortoAB__BarcoPS', '-idxPortoAB__numPS'],
            },
        ),
        migrations.CreateModel(
            name='inoPendContr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previnoPendContr', models.BooleanField(default=False, verbose_name='Anomalias?')),
                ('DatainoPendContr', models.DateField(verbose_name='Data da Anomalia')),
                ('DescinoPendContr', models.TextField(blank=True, max_length=500, verbose_name='Descrição')),
                ('BroainoPendContr', models.CharField(choices=[('sim', 'SIM'), ('nao', 'NÃO'), ('n_ap', 'N/A')], max_length=4, verbose_name='Abertura de BROA?')),
                ('NumBroainoPendContr', models.CharField(blank=True, max_length=12, verbose_name='Num BROA')),
                ('infGerContinoPendContr', models.CharField(choices=[('sim', 'SIM'), ('nao', 'NÃO'), ('n_ap', 'N/A')], max_length=4, verbose_name='Houve Informe a Gerência de Contrato?')),
                ('idxinoPendContr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Inoperância,Pendencia e Assunto Contratual',
                'verbose_name_plural': 'Inoperâncias,Pendencias e Assuntos Contratuais',
                'ordering': ['idxinoPendContr__BarcoPS', '-idxinoPendContr__numPS'],
            },
        ),
        migrations.CreateModel(
            name='iapo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priDomIapo', models.DateField(verbose_name='IAPO Primeira Semana')),
                ('priDomIapoOs', models.CharField(choices=[('sim', 'SIM'), ('nao', 'NÃO'), ('n_ap', 'N/A')], max_length=4, verbose_name='OSs para IAPO?')),
                ('segDomIapo', models.DateField(verbose_name='IAPO Segunda Semana')),
                ('segDomIapoOs', models.CharField(choices=[('sim', 'SIM'), ('nao', 'NÃO'), ('n_ap', 'N/A')], max_length=4, verbose_name='OSs para IAPO?')),
                ('terDomIapo', models.DateField(verbose_name='IAPO Terceira Semana')),
                ('terDomIapoOsConc', models.CharField(choices=[('sim', 'SIM'), ('nao', 'NÃO'), ('n_ap', 'N/A')], max_length=4, verbose_name='OSs concluidas para esse envio?')),
                ('ObservIapo', models.TextField(blank=True, max_length=500, verbose_name='Observações')),
                ('idxIapo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'IAPO',
                'ordering': ['idxIapo__BarcoPS', '-idxIapo__numPS'],
            },
        ),
        migrations.CreateModel(
            name='BarcosCad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipoBarco', models.CharField(choices=[('RSV', 'RSV'), ('SDSV', 'SDSV'), ('DSV', 'DSV'), ('TUP', 'TUP')], max_length=6, verbose_name='Tipo')),
                ('nomeBarco', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
                ('modalBarco', models.CharField(max_length=20, verbose_name='Modal')),
                ('emailPetr', models.EmailField(max_length=40, unique=True, verbose_name='E-mail Petrobras')),
                ('dataPrimPorto', models.DateField(verbose_name='Data Primeiro Porto')),
                ('emprNav', models.CharField(max_length=80, verbose_name='Empresa Navegação')),
                ('icjEmprNav', models.CharField(max_length=20, unique=True, verbose_name='ICJ Empresa Navegação')),
                ('emprServ', models.CharField(max_length=80, verbose_name='Empresa Serviço')),
                ('icjEmprServ', models.CharField(max_length=20, unique=True, verbose_name='ICJ Empresa Serviço')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('modalSelec', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fiscweb.modalbarco', verbose_name='Seleciona Modal')),
            ],
            options={
                'verbose_name': 'Barco',
                'verbose_name_plural': 'Barcos',
                'ordering': ['nomeBarco'],
            },
        ),
        migrations.CreateModel(
            name='anocSMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prevanocSMS', models.BooleanField(default=False, verbose_name='Anomalias?')),
                ('DataanocSMS', models.DateField(verbose_name='Data da Anomalia')),
                ('classnocSMS', models.CharField(choices=[('critica', 'CRÍTICA'), ('nao_critica', 'NÃO CRITICA')], max_length=12, verbose_name='Classificação da Anomalia')),
                ('DescanocSMS', models.TextField(blank=True, max_length=500, verbose_name='Descrição da Anomalia')),
                ('informContr', models.CharField(choices=[('sim', 'SIM'), ('nao', 'NÃO')], max_length=4, verbose_name='Houve Informe ao Controle?')),
                ('idxanocSMS', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.passserv')),
            ],
            options={
                'verbose_name': 'Anomalia e Ocorrência de SMS',
                'verbose_name_plural': 'Anomalias e Ocorrêcias de SMS',
                'ordering': ['idxanocSMS__BarcoPS', '-idxanocSMS__numPS'],
            },
        ),
    ]
