# Generated by Django 4.2.7 on 2025-10-20 20:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('fiscweb', '0007_alter_barcoscad_contato_alter_barcoscad_contsto'),
    ]

    operations = [
        migrations.CreateModel(
            name='contatoUep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('afretUep', models.BooleanField(verbose_name='Unidade Afretada?')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contato UEP',
                'verbose_name_plural': 'Contatos UEPs',
            },
        ),
        migrations.AddField(
            model_name='barcoscad',
            name='RamalBrOper',
            field=models.CharField(blank=True, max_length=9, null=True, verbose_name='Ramal BR Operações'),
        ),
        migrations.AddField(
            model_name='barcoscad',
            name='RamalBrPassad',
            field=models.CharField(blank=True, max_length=9, null=True, verbose_name='Ramal BR Passadiço'),
        ),
        migrations.AddField(
            model_name='barcoscad',
            name='TelExtoper',
            field=models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Telefone ou Celular deve estar no formato: (99)99999-9999', regex='^\\(\\d{2}\\)\\d{4,5}-\\d{4}$')], verbose_name='Telefone Externo Operações'),
        ),
        migrations.AddField(
            model_name='barcoscad',
            name='TelExtpassad',
            field=models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Telefone ou Celular deve estar no formato: (99)99999-9999', regex='^\\(\\d{2}\\)\\d{4,5}-\\d{4}$')], verbose_name='Telefone Externo Passadiço'),
        ),
        migrations.AddField(
            model_name='barcoscad',
            name='contPassad',
            field=models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Telefone ou Celular deve estar no formato: (99)99999-9999', regex='^\\(\\d{2}\\)\\d{4,5}-\\d{4}$')], verbose_name='Celular Passadiço'),
        ),
        migrations.AddField(
            model_name='barcoscad',
            name='emailOper',
            field=models.EmailField(default=0, max_length=40, unique=True, verbose_name='E-mail OPerações'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='barcoscad',
            name='emailPassad',
            field=models.EmailField(default=0, max_length=40, unique=True, verbose_name='E-mail Passadiço'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='barcoscad',
            name='listEmailAssDig',
            field=models.TextField(blank=True, max_length=500, null=True, verbose_name='e-mails assinatura digital RDO'),
        ),
        migrations.AlterField(
            model_name='barcoscad',
            name='contAto',
            field=models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Telefone ou Celular deve estar no formato: (99)99999-9999', regex='^\\(\\d{2}\\)\\d{4,5}-\\d{4}$')], verbose_name='Celular ATO'),
        ),
        migrations.AlterField(
            model_name='barcoscad',
            name='contSto',
            field=models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Telefone ou Celular deve estar no formato: (99)99999-9999', regex='^\\(\\d{2}\\)\\d{4,5}-\\d{4}$')], verbose_name='Celular STO'),
        ),
        migrations.AlterField(
            model_name='fiscaiscad',
            name='celular',
            field=models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Telefone ou Celular deve estar no formato: (99)99999-9999', regex='^\\(\\d{2}\\)\\d{4,5}-\\d{4}$')], verbose_name='Celular'),
        ),
        migrations.CreateModel(
            name='subTabcontatosUeps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipoContato', models.CharField(max_length=20, verbose_name='Descrição do Contato')),
                ('chaveCompartilhada', models.CharField(blank=True, max_length=4, null=True, unique=True, verbose_name='Chave Compartilhada')),
                ('emailExterno', models.EmailField(max_length=40, verbose_name='E-mail Externo')),
                ('ramalBR', models.CharField(blank=True, max_length=9, null=True, verbose_name='Ramal BR')),
                ('telExterno', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Telefone ou Celular deve estar no formato: (99)99999-9999', regex='^\\(\\d{2}\\)\\d{4,5}-\\d{4}$')], verbose_name='Telefone Externo')),
                ('idxcontatoUep', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiscweb.contatouep')),
            ],
            options={
                'verbose_name': 'Sub Tabela Contato UEP',
                'verbose_name_plural': 'Sub Tabela Contatos UEPs',
                'ordering': ['idxcontatoUep', 'tipoContato'],
            },
        ),
    ]
